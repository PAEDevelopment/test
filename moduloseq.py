#A script to test combinations of numbers for alternating modulo sequence

def modseq(x,y,z): #generate lists of remainders from sequence of integers
    """
    print the series resulting from taking integers from 0 to z and getting
    modulus remainder alternately from x and y (must be integers)
    """
    results = []
    for i in range(0,z,2):
        results.append(i%x)
        results.append((i+1)%y)
    return(results)


def findrep(x): #find repetition in sequence generated by modseq
    """
    iterate over sequence (x) to find any repetition within
    """
 
    for i in range(max(x),len(x)):
        if x[:i] == x[i:2*i]:
          return i #,' is length of repeating sequence: ')#, x[:i])
          break
        else:
           if i == len(x)-1:
               print('No repeating sequence found.')
 
def runtest(firstnum, secondnum, length): #report out modseq and findrep functions
    """
    feed parameters into modseq() and findrep() functions
    """
    a = modseq(firstnum, secondnum, length)
    b = findrep(a)
    print('modulo sequence for [',firstnum,', ',secondnum,'] repeats at:', b)
    #print(a)
    #findrep(a)

#ENTER PARAMETERS HERE:
#runtest(7,5,200)

for i in range(1,8):
    for j in range(1,8):
         if i != j:
               runtest(i,j,200)
               
    
    
    
    
